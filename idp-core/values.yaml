annotations: {}
labels: {}

image:
  pullPolicy: IfNotPresent
  containerRegistry: "dtideregistry.azurecr.io"

cognaio:
  namespace: cognaio-idp
  url: ""
  protocol: "https"
  wildcardUrl: ""
  labels:
  cert:
    certificate: ""
    key: "" 
    secret:
      name: cognaio-com-tls-secret
      init: true
  ingress:
    enabled: true

nginx:
  name: nginx
  replicaCount: 1
  image:
    name: nginx/nginx
    tag: 1.27.4
  service:
    name: nginx
    port: 80
    type: ClusterIP
  # resources:
  #   limits:
  #     memory: "256Mi"
  #   requests:
  #     memory: "128Mi"

usermanual:
  name: cce-user-manual
  replicaCount: 1
  image:
    name: dti/idp/cce-user-manual
    tag: 2.4.0
  service:
    name: cce-user-manual
    port: 80
    type: ClusterIP
  env:
    node_env: production

redis:
  name: redis
  replicaCount: 1
  image:
    name: bitnami/redis
    tag: 7.4.2
  service:
    name: redis
    port: 6379
    type: ClusterIP
  secret:
    name: redis-secrets
    init: true
    password: "changeme"
    providerUrl: redis://:changeme@redis:6379

cognaiostudio:
  name: cognaiostudio
  replicaCount: 1
  image:
    name: dti/idp/cognaiostudio
    tag: 2.4.0
  service:
    name: cognaiostudio
    port: 80
    type: ClusterIP
    urlpath: /cognaioanalyze
  env:
    node_env: production
  # resources:
  #   limits:
  #     memory: "256Mi"
  #   requests:
  #     memory: "64Mi"

cognaioservice:
  name: cognaioservice
  replicaCount: 1
  init:
    image:
      name: dti/idp/cognaioschemamanager
      tag: 2.4.0
  image:
    name: dti/idp/cognaioservice
    tag: 2.4.0
  service:
    name: cognaioservice
    port: 80
    type: ClusterIP
    urlpath: /extraction/api
  env:
    port: 3000
    node_env: production
    secret:
      name: cognaioservice-env-secrets
      init: true
    db:
      postgreSqlUser: ""
      postgreSqlPwd: ""
      postgreSqlDbServer: ""
      postgreSqlDbPort: 5432
      postgreSqlSslRequired: true
      postgreSqlDbName: "cognaio_idp"
      schemas: 'cognaio_extensions; cognaio_design; cognaio_audits'
    tokens:
      passPhraseAuditArtifacts: ""
      passPhraseDefinitions: ""
      passPhraseTemplates: ""
      passPhraseCryptoAsymetric: ""
      passPhraseCryptoSymetric: ""
      tokenEncryptionTokenJwtKey: ""
      passPhraseAccessTokenJwtKey: ""
      passPhraseRefreshTokenJwtKey: ""
      passPhraseUnsubscribeTokenJwtKey: ""
      passPhraseExportTokenJwtKey: ""
      passPhraseMailboxesTokenJwtKey: ""
      passPhraseEnvelopesTokenJwtKey: ""
      passPhraseRegisterTokenJwtKey: ""
      passPhraseOtpTokenJwtKey: ""
      passPhraseAppKeyJwtKey: ""
      passPhraseCryptoSymetricAppKey: ""
      passPhraseAnalyzeFromContentJwtKey: ""
      passPhraseAnalyzeResponseDownloadJwtKey: ""
    ai:
      apikeyAzureOpenAi: ""
      apikeyNativeOpenAi: ""
      apikeyAzureAiDocumentIntelligence: ""
      apikeyAzureCognitiveServicesComputervision: ""
      endpointAzureOpenAi: ""
      endpointNativeOpenAi: ""
      endpointAzureAiDocumentIntelligence: ""
      endpointAzureCognitiveServicesComputerVision: ""
      apikeyNativeGemini: ""
      apikeyNativeAnthropic: ""
      apikeyNativeCerebral: ""
      endpointNativeCerebral: ""
    aws:
      accesskeyIdAwsTextract: ""
      secretAccessKeyAwsTextract: ""
      regionAwsTextract: ""
      accesskeyIdAwsBedrock: ""
      secretAccessKeyAwsBedrock: ""
      regionAwsBedrock: ""
    mailAccount:
      user: ""
      password: ""
      host: "smtp.office365.com"
      port: 587
      fromAddressFriendlyName: "Cognaio"
      useAdvancedAuth: false
      advancedAuthJson: '{"auth":{"user":"yourEmailAddress","pass":"yourPassword"}}'
      useCustomSettings: false
      customSettingsJson: '{"secure":false,"maxConnections":150,"tls":{"ciphers":"SSLv3","rejectUnauthorized":false}}'
    organization:
      users: "'email_1@example.com','email_2@example.com'"
    cognitiveServices:
      computervision:
        maxRequestTimeoutInSec: 6
        maxRetries: 30
        maxRetriesWaitTimeoutInSec: 1
        maxWaitTimeoutForFinishedInSec: 1
      aiDocumentIntelligence:
        maxRequestTimeoutInSec: 10
        maxRetries: 30
        maxRetriesWaitTimeoutInSec: 3
      awsTextract:
        maxRequestTimeoutInSec: 10
        maxRetries: 30
        maxRetriesWaitTimeoutInSec: 3
    essentials:
      warningNotificationTimeoutInHours: 48
      featureExceedsLimitsNotificationTimeoutInDays: 2
    featurePreview:
      uiAiChainCrafterDisabled: true
      cerebralEdgeDisabled: true
      awsServicesDisabled: true
    environmentNameForNotifications: "Cognaio IDP"
    logSeverity: "info"
  # resources:
  #   limits:
  #     memory: "1024Mi"
  #   requests:
  #     memory: "512Mi"

emailservice:
  name: emailservice
  replicaCount: 1
  image:
    name: dti/idp/emailservice
    tag: 2.4.0
  service:
    name: emailservice
    port: 80
    type: ClusterIP
  env:
    port: 7171
    node_env: production
    logSeverity: "error"
    secret:
      name: emailservice-env-secrets
      init: true
    passPhraseCryptoSymetricAppKey: ""
  # resources:
  #   limits:
  #     memory: "512Mi"
  #   requests:
  #     memory: "128Mi"

cognaioflexsearchservice:
  name: cognaioflexsearchservice
  replicaCount: 1
  image:
    name: dti/idp/cognaioflexsearchservice
    tag: 2.4.0
  service:
    name: cognaioflexsearchservice
    port: 80
    type: ClusterIP
  env:
    port: 8688
    node_env: production
    db:
      postgreSqlUser: ""
      postgreSqlPwd: ""
      postgreSqlDbServer: ""
      postgreSqlDbPort: 5432
      postgreSqlDbName: "cognaio_idp"
      postgreSqlSslRequired: true
      schemas: 'cognaio_extensions; cognaio_repositories'
    secret:
      name: cognaioflexsearchservice-env-secrets
      init: true
    logSeverity: "error"
    passPhrase_Repositories: ""
  # resources:
  #   limits:
  #     memory: "2048Mi"
  #   requests:
  #     memory: "1024Mi"

imageprovider:
  name: imageprovider
  replicaCount: 3
  image:
    name: dti/idp/image
    tag: 2.4.0
  service:
    name: imageprovider
    port: 80
    type: ClusterIP
  env:
    port: 3333
  resources:
    limits:
      memory: "5120Mi"
    requests:
      memory: "512Mi"

objectdetectionprovider:
  name: objectdetectionprovider
  replicaCount: 1
  image:
    name: dti/idp/objectdetectionprovider
    tag: 2.4.0
  service:
    name: objectdetectionprovider
    port: 80
    type: ClusterIP
  env:
    port: 7337
  resources:
    limits:
      memory: "5120Mi"
    requests:
      memory: "512Mi"

# Default values for HelmCharts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

nodeSelector: {}

tolerations: []

affinity: {}
